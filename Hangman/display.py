def draw_hangman(count_error: int) -> str:
    """
    Возвращает строковое представление виселицы на основе количества ошибок.

    :param count_error: Количество ошибок, от 0 до 6.
    :return: Строка, содержащая ASCII отображение виселицы.
    """
    hangman_pics = [
        """
      +---+
      |   |
          |
          |
          |
          |
    =========""",
        """
      +---+
      |   |
      O   |
          |
          |
          |
    =========""",
        """
      +---+
      |   |
      O   |
      |   |
          |
          |
    =========""",
        """
      +---+
      |   |
      O   |
     /|   |
          |
          |
    =========""",
        r"""
      +---+
      |   |
      O   |
     /|\  |
          |
          |
    =========""",
        r"""
      +---+
      |   |
      O   |
     /|\  |
     /    |
          |
    =========""",
        r"""
      +---+
      |   |
      O   |
     /|\  |
     / \  |
          |
    =========""",
    ]

    return hangman_pics[count_error]


# Строка, содержащая ASCII-арт для отображения при победе игрока
win_pics = r"""
      +---+
          |
          |
      \O/ |
       |  |
      / \ |
    =========
Вы победили! Герой спасён!
"""


def print_separator(char: str = "—", length: int = 81) -> None:
    """
    Выводит разделительную линию из указанного символа, повторенного указанное количество раз.

    :param char: Символ для разделителя, по умолчанию "—".
    :param length: Длина разделителя, по умолчанию 81.
    """
    print(char * length)
